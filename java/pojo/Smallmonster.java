package pojo;
// Generated Oct 5, 2023 4:41:40 PM by Hibernate Tools 4.3.1

import dao.DAOSmallMonster;
import java.util.List;
import javax.faces.bean.ManagedBean;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Smallmonster generated by hbm2java
 */
@ManagedBean (name="sm")
@Entity
@Table(name="Smallmonster")
public class Smallmonster  implements java.io.Serializable {

     @Id
     private Integer smId;
     @Column
     private String smName;
     private Set subquests = new HashSet(0);

    public Smallmonster() {
    }

	
    public Smallmonster(String smName) {
        this.smName = smName;
    }
    public Smallmonster(String smName, Set subquests) {
       this.smName = smName;
       this.subquests = subquests;
    }
   
    public Integer getSmId() {
        return this.smId;
    }
    
    public void setSmId(Integer smId) {
        this.smId = smId;
    }
    public String getSmName() {
        return this.smName;
    }
    
    public void setSmName(String smName) {
        this.smName = smName;
    }
    public Set getSubquests() {
        return this.subquests;
    }
    
    public void setSubquests(Set subquests) {
        this.subquests = subquests;
    }

    public void save() {
        DAOSmallMonster smdao = new DAOSmallMonster();
        smdao.addSM(this);
    }

    public void delete(Integer smId) {
        DAOSmallMonster smdao = new DAOSmallMonster();
        smdao.deleteSM(smId);
    }

    public List<Smallmonster> getbyid() {
        DAOSmallMonster smdao = new DAOSmallMonster();
        List<Smallmonster> small = smdao.getbyID(smId);
        smName = small.get(0).smName;
        return small;
    }

    public List<Smallmonster> getAllRecords() {
        DAOSmallMonster smdao = new DAOSmallMonster();
        List<Smallmonster> small = smdao.showSM();
        return small;
    }

    public void update() {
        DAOSmallMonster smdao = new DAOSmallMonster();
        smdao.updateSM(this);
    }
}


